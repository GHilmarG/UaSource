function [F,J,RunInfo]=JuvOpt(UserVar,RunInfo,CtrlVar,MUA,BCs,F)



A=[] ; b=[] ; uvlb=[] ; uvub=[] ;  nonlcon = [];
[Aeq,beq]=AssembleLuvSSTREAM(CtrlVar,MUA,BCs) ;


fext0=KRTFgeneralBCs(CtrlVar,MUA,F,true); % RHS with velocities set to zero, i.e. only external forces

func=@(uv) Juv(uv,UserVar,RunInfo,CtrlVar,MUA,F,fext0) ;





% 
% 
% options = optimoptions('fmincon',...
%     'Algorithm','interior-point',...
%     'CheckGradients',false,...
%     'ConstraintTolerance',1e-10,...
%     'HonorBounds',true,...
%     'Diagnostics','on',...
%     'DiffMaxChange',Inf,...
%     'DiffMinChange',0,...
%     'Display','iter-detailed',...
%     'FunValCheck','off',...
%     'MaxFunctionEvaluations',1e6,...
%     'MaxIterations',CtrlVar.Inverse.Iterations,...,...
%     'OptimalityTolerance',1e-20,...
%     'OutputFcn',@fminuncOutfun,...
%     'PlotFcn',{@optimplotlogfval,@optimplotstepsize},...
%     'StepTolerance',1e-30,...
%     'FunctionTolerance',1,...
%     'UseParallel',true,...
%     'HessianFcn',Hfunc,...
%     'HessianMultiplyFcn',[],...
%     'InitBarrierParam',1e-7,...           % On a restart this might have to be reduced if objective function starts to increase
%     'ScaleProblem','none',...
%     'InitTrustRegionRadius',1,...         % set to smaller value if the forward problem is not converging
%     'SpecifyConstraintGradient',false,...
%     'SpecifyObjectiveGradient',true,...
%     'SubproblemAlgorithm','cg');  % here the options are 'gc'


neval=100;
nit=100;

options = optimoptions('fmincon',...
    'Algorithm','trust-region-reflective',...
    'CheckGradients',false,...
    'ConstraintTolerance',1e-10,...
    'HonorBounds',true,...
    'Diagnostics','on',...
    'DiffMaxChange',Inf,...
    'DiffMinChange',0,...
    'Display','iter-detailed',...
    'FunValCheck','off',...
    'MaxFunctionEvaluations',neval,...
    'MaxIterations',nit,...,...
    'OptimalityTolerance',1e-20,...
    'OutputFcn',@fminuncOutfun,...
    'PlotFcn',{@optimplotlogfval,@optimplotstepsize},...
    'StepTolerance',1e-30,...
    'FunctionTolerance',1,...
    'UseParallel',true,...
    'HessianFcn','objective',...
    'HessianMultiplyFcn',[],...
    'SpecifyConstraintGradient',false,...
    'SpecifyObjectiveGradient',true,...
    'SubproblemAlgorithm','cg');  % here the options are 'gc'



uv0=[F.ub ; F.vb];

[uv,J,exitflag,output] = fmincon(func,uv0,A,b,Aeq,beq,uvlb,uvub,nonlcon,options);

N=MUA.Nnodes;

F.ub=uv(1:N);
F.vb=uv(N+1:2*N);


end



